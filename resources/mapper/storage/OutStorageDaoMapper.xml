<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ztkj.storage.dao.OutStorageDao">
    <resultMap id="outStorageMap" type="com.ztkj.storage.model.OutStorage">
        <id property="id" column="f_id"></id>
        <result property="status" column="f_status"/>
        <result property="createTime" column="f_createTime"/>
        <association property="order" column="f_orderno" resultMap="orderMap"/>
        <association property="storage" column="f_storageId" resultMap="storageMap"/>
    </resultMap>
    <!--仓库映射类-->
    <resultMap id="storageMap" type="com.ztkj.storage.model.Storage">
        <id property="id" column="f_storageId"></id>
        <result property="name" column="storageName"/>
        <association property="principalPerson" column="f_userId" resultMap="userMap"/>
    </resultMap>
    <!--仓库出库人映射-->
    <resultMap id="userMap" type="com.ztkj.sys.model.User">
        <id property="id" column="f_userId"></id>
        <result property="name" column="stoManName"/>
    </resultMap>
    <!--订单映射类-->
    <resultMap id="orderMap" type="com.ztkj.market.model.Order">
        <id property="orderNo" column="f_orderNo"></id>
        <result property="status" column="f_status"/>
        <result property="createTime" column="f_createTime"/>
        <result property="money" column="f_money"/>
        <result property="opinion" column="f_opinion"/>
        <result property="checkTime" column="f_checkTime"/>
        <association property="createUser" column="f_createId" resultMap="createuserMap"/>
        <association property="user" column="f_userId" resultMap="checkuserMap"/>
        <association property="customer" column="f_custormer" resultMap="customerMap"/>
    </resultMap>
    <!--操作人-->
    <resultMap id="createuserMap" type="com.ztkj.sys.model.User">
        <id property="id" column="f_createId"></id>
        <result property="name" column="createPerson"/>
    </resultMap>
    <!--审核人-->
    <resultMap id="checkuserMap" type="com.ztkj.sys.model.User">
        <id property="id" column="f_userId"></id>
        <result property="name" column="checkPerson"/>
    </resultMap>
    <!--客户-->
    <resultMap id="customerMap" type="com.ztkj.market.model.Customer">
        <id property="id" column="f_custormer"></id>
        <result property="name" column="custormerName"/>
        <result property="tel" column="f_tel"/>
    </resultMap>
    <!--订购明细-->
    <resultMap id="orderDetailMap" type="com.ztkj.market.model.OrderDetail">
        <id property="id" column="f_id"></id>
        <result property="num" column="f_num"/>
        <result property="price" column="f_price"/>
        <result property="money" column="f_money"/>
        <association property="goods" column="f_goodsId" resultMap="goodsMap"/>
        <association property="vendor" column="f_vendorId" resultMap="vendorMap"/>
    </resultMap>
    <!--商品表映射-->
    <resultMap id="goodsMap" type="com.ztkj.purchase.model.Goods">
        <id property="id" column="f_goodsId"></id>
        <result property="model" column="goodName"/>
        <result property="unit" column="goodUnit"/>
        <association property="goodsType" column="f_gTypeId" resultMap="typeMap"/>
    </resultMap>
    <!--类型表映射-->
    <resultMap id="typeMap" type="com.ztkj.purchase.model.GoodsType">
        <id property="id" column="f_gTypeId"></id>
        <result property="name" column="typeName"/>
        <association property="brand" column="f_brandId" resultMap="brandMap"/>
    </resultMap>
    <!--商标表映射-->
    <resultMap id="brandMap" type="com.ztkj.purchase.model.Brand">
        <id property="id" column="f_brandId"></id>
        <result property="name" column="brandName"/>
    </resultMap>
    <!--厂商映射-->
    <resultMap id="vendorMap" type="com.ztkj.purchase.model.Vendor">
        <id property="id" column="f_vendorId"></id>
        <result property="name" column="vendorName"/>
    </resultMap>
    <!--库存映射-->
    <resultMap id="inventoryMap" type="com.ztkj.storage.model.Inventory">
        <id property="id" column="f_id"></id>
        <result property="num" column="f_num"/>
        <association property="goods" column="f_goodId" resultMap="goodsMap"/>
        <association property="vendor" column="f_vendorId" resultMap="vendorMap"/>
    </resultMap>
    <!--实时查询订单编号-->
    <select id="findAllOrderNo" resultMap="orderMap">
        select f_orderNo from t_order where status = '2'
        <if test="name != null and name != ''">
            and f_orderNo like '%'||#{name}||'%'
        </if>
    </select>
    <!-- 添加出库界面 查询出所有状态为可用的仓库-->
    <select id="findAllStorage"  resultMap="storageMap">
        select f_id,f_name from t_storage where f_status = '1'
    </select>
    <!--分页+模糊查询-->
    <select id="findAllByPage"  resultMap="outStorageMap">
        select * from (
        select b.*,u.f_name as stoManName,rownum rn from
        (
        select a.*,s.f_name as storageName from (
        select ous.*,od.f_money
        from t_outstorage ous
        left join t_order od
        on ous.f_orderNo = od.f_orderNo) a
        left join t_storage s
        on a.f_storageId = s.f_id ) b left join t_user u on b.f_userId = u.f_id
        where <![CDATA[rownum <= #{endIndex}]]>
        <if test="outStorageParam.storageName != null and outStorageParam.storageName != ''">
            and b.storageName like '%'||#{outStorageParam.storageName}||'%'
        </if>
        <if test="outStorageParam.orderNo != null and outStorageParam.orderNo != ''">
            and b.f_orderNo like '%'||#{outStorageParam.orderNo}||'%'
        </if>
        <if test="outStorageParam.status != null and outStorageParam.status != 0">
            and b.f_status = #{outStorageParam.status}
        </if>
        <if test="principalId != null and principalId != 3 and principalId != 5 and principalId != 43">
            and b.f_userId = #{principalId}
        </if>
        order by b.f_Id desc
        ) where rn >= #{startIndex}
    </select>
    <!--分页统计-->
    <select id="countByPage" resultType="int">
        select count(f_id) from (
        select b.*,u.f_name as stoManName from
        (
        select a.*,s.f_name as storageName from (
        select ous.*,od.f_money
        from t_outstorage ous
        left join t_order od
        on ous.f_orderNo = od.f_orderNo) a
        left join t_storage s
        on a.f_storageId = s.f_id ) b left join t_user u on b.f_userId = u.f_id
        )
        <where>
            <if test="outStorageParam.storageName != null and outStorageParam.storageName != ''">
                and storageName like '%'||#{outStorageParam.storageName}||'%'
            </if>
            <if test="outStorageParam.orderNo != null and outStorageParam.orderNo != ''">
                and f_orderNo like '%'||#{outStorageParam.orderNo}||'%'
            </if>
            <if test="outStorageParam.status != null and outStorageParam.status != 0">
                and f_status = #{outStorageParam.status}
            </if>
            <if test="principalId != null and principalId != 3 and principalId != 5 and principalId != 43">
                and f_userId = #{principalId}
            </if>
        </where>
    </select>
    <!--根据出库表订购单编号查询订购表信息-->
    <select id="findOrderById" resultMap="orderMap">
        select od.*,u.f_name as createPerson,u1.f_name as checkPerson,ct.f_name as custormerName,ct.f_tel
        from t_order od left join t_user u on od.f_createid = u.f_id
        left join t_user u1 on od.f_userid = u1.f_id
        left join t_customer ct on od.f_custormer = ct.f_id
        where f_orderNo = #{orderNo}
    </select>
    <!--根据出库表订购单编号查询出库表信息-->
    <select id="findOutStorageById" resultMap="outStorageMap">
        select a.*,u.f_name as stoManName from
        (select ous.*,s.f_name as storageName,s.f_principalid from t_outstorage ous
        left join t_storage s on ous.f_storageid = s.f_id) a
        left join t_user u on a.f_principalId = u.f_id
        where f_orderNo = #{orderNo}
    </select>
    <!--根据出库表订购单编号查询订购明细表信息-->
    <select id="findOrderDetailById" resultMap="orderDetailMap">
        select c.*,ven.f_name as vendorName from
        (select b.*,br.f_name as brandName from
        (select a.*,gt.f_brandid,gt.f_name as typeName from
        (select odd.*,g.f_gtypeid,g.f_model as goodName,g.f_unit as goodUnit
        from t_orderdetail odd
        left join t_goods g
        on odd.f_goodsid = g.f_id) a left join t_goodstype gt on a.f_gtypeId = gt.f_id) b
        left join t_brand br on b.f_brandId = br.f_id) c left join t_vendor ven
        on c.f_vendorId = ven.f_id
        where f_orderNo = #{orderNo}
    </select>
    <!--查询所有审核通过的订单-->
    <select id="findAllOrderStatus2" resultMap="orderMap">
        select f_orderNo from t_order where f_status = '2'
    </select>
    <!--添加出库-->
    <insert id="addOutStorage">
        insert into t_outstorage(f_id,f_orderno,f_storageid,f_status,f_createtime,f_userid)
        values(seq_t_outstorage.nextval,#{outStorage.order.orderNo},#{outStorage.storage.id},
        #{outStorage.status},#{outStorage.createTime,jdbcType=TIMESTAMP},#{outStorage.storage.principalPerson.id})
    </insert>
    <!--根据订购单找到出库仓库  再找到该仓库库存-->
    <select id="findInventoryById" resultMap="inventoryMap">
        select * from t_inventory where f_storageId =
        (select f_storageId from t_outstorage where f_orderNo = #{orderNo})
    </select>
    <!--未发货到已发货1改2-->
    <update id="fahuo">
        update t_outstorage set f_status = '2' where f_orderNo = #{outStorage.order.orderNo}
    </update>
    <!--取消入库，减少库存数量-->
    <update id="updatesubInventoryNum">
        update t_inventory set f_num=f_num-#{inventory.num} where
        f_storageId  = #{inventory.storage.id}
        and f_goodsId =#{inventory.goods.id}
        and f_vendorId =#{inventory.vendor.id}
    </update>
    <!--退货，增加库存数量-->
    <update id="updateaddInventoryNum">
        update t_inventory set f_num=f_num+#{inventory.num} where
        f_storageId  = #{inventory.storage.id}
        and f_goodsId =#{inventory.goods.id}
        and f_vendorId =#{inventory.vendor.id}
    </update>
    <!--查询库存中商品数量-->
    <select id="count" resultType="int">
        select f_num from t_inventory  where
        f_storageId  = #{inventory.storage.id}
        and f_goodsId =#{inventory.goods.id}
        and f_vendorId =#{inventory.vendor.id}
    </select>
    <!--未发货改已退货1改5-->
    <update id="weifatotuihuo">
        update t_outstorage set f_status = '5' where f_orderNo = #{outStorage.order.orderNo}
    </update>
    <!--已发货改取消订单 2-4-->
    <update id="yifatoquxiaodingdan">
        update t_outstorage set f_status = '4' where f_orderNo = #{outStorage.order.orderNo}
    </update>
    <!--修改状态取消订单改已退货 4-5-->
    <update id="querentuihuo">
        update t_outstorage set f_status = '5' where f_orderNo = #{outStorage.order.orderNo}
    </update>
    <!--修改状态已发货改已回款 2-3-->
    <update id="yifatoyihuikuan">
        update t_outstorage set f_status = '3' where f_orderNo = #{outStorage.order.orderNo}
    </update>
    <!--根据仓库id和订单号查询出库信息-->
    <select id="findOutStorageByorderNoAndStorageId" resultMap="outStorageMap">
        select a.*,u.f_name as stoManName from
        (select ous.*,s.f_name as storageName,s.f_principalid from t_outstorage ous
        left join t_storage s on ous.f_storageid = s.f_id) a
        left join t_user u on a.f_principalId = u.f_id
        where f_orderNo = #{orderNo} and f_storageId = #{storageId}
    </select>
</mapper>